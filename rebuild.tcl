#*****************************************************************************************
# Vivado (TM) v2020.1 (64-bit)
#
# rebuild.tcl: Tcl script for re-creating project 'project_1'
#
# Generated by Vivado on Tue Jan 05 13:36:50 CET 2021
# IP Build 2902112 on Wed May 27 22:43:36 MDT 2020
#
# This file contains the Vivado Tcl commands for re-creating the project to the state*
# when this script was generated. In order to re-create the project, please source this
# file in the Vivado Tcl Shell.
#
# * Note that the runs in the created project will be configured the same way as the
#   original project, however they will not be launched automatically. To regenerate the
#   run results please launch the synthesis/implementation runs as needed.
#
#*****************************************************************************************
# NOTE: In order to use this script for source control purposes, please make sure that the
#       following files are added to the source control system:-
#
# 1. This project restoration tcl script (rebuild.tcl) that was generated.
#
# 2. The following source(s) files that were local or imported into the original project.
#    (Please see the '$orig_proj_dir' and '$origin_dir' variable setting below at the start of the script)
#
#    "/home/paul/work/fpga/Xilinx/artix7/Minimig_ECS_AARS2/project_1/project_1.srcs/Agnus/new/Agnus_ooc.xdc"
#    "/home/paul/work/fpga/Xilinx/artix7/Minimig_ECS_AARS2/project_1/project_1.srcs/userio/new/userio_ooc.xdc"
#    "/home/paul/work/fpga/Xilinx/artix7/Minimig_ECS_AARS2/project_1/project_1.srcs/Denise/new/Denise_ooc.xdc"
#    "/home/paul/work/fpga/Xilinx/artix7/Minimig_ECS_AARS2/project_1/project_1.srcs/Amber/new/Amber_ooc.xdc"
#    "/home/paul/work/fpga/Xilinx/artix7/Minimig_ECS_AARS2/project_1/project_1.srcs/gary/new/gary_ooc.xdc"
#    "/home/paul/work/fpga/Xilinx/artix7/Minimig_ECS_AARS2/project_1/project_1.srcs/gayle/new/gayle_ooc.xdc"
#    "/home/paul/work/fpga/Xilinx/artix7/Minimig_ECS_AARS2/project_1/project_1.srcs/Paula/new/Paula_ooc.xdc"
#    "/home/paul/work/fpga/Xilinx/artix7/Minimig_ECS_AARS2/project_1/project_1.srcs/utils_1/imports/impl_1/amiga_ffm_a7100_routed.dcp"
#    "/home/paul/work/fpga/Xilinx/artix7/Minimig_ECS_AARS2/project_1/project_1.srcs/utils_1/imports/synth_1/amiga_ffm_a7100.dcp"
#
# 3. The following remote source files that were added to the original project:-
#
#    "/home/paul/work/fpga/Xilinx/artix7/Minimig_ECS_AARS2/rtl/Minimig_ECS/impl1/source/CIA8520.v"
#    "/home/paul/work/fpga/Xilinx/artix7/Minimig_ECS_AARS2/rtl/Minimig_ECS/impl1/source/Clock.v"
#    "/home/paul/work/fpga/Xilinx/artix7/Minimig_ECS_AARS2/rtl/source_emard/Minimig1.v"
#    "/home/paul/work/fpga/Xilinx/artix7/Minimig_ECS_AARS2/rtl/i2s_tx.v"
#    "/home/paul/work/fpga/Xilinx/artix7/Minimig_ECS_AARS2/rtl/mcp23s17/mcp23s17_input.v"
#    "/home/paul/work/fpga/Xilinx/artix7/Minimig_ECS_AARS2/rtl/mcp23s17/spi_master.v"
#    "/home/paul/work/fpga/Xilinx/artix7/Minimig_ECS_AARS2/rtl/source_emard/twowaycache.v"
#    "/home/paul/work/fpga/Xilinx/artix7/Minimig_ECS_AARS2/rtl/Minimig_ECS/impl1/source/Debounce.vhd"
#    "/home/paul/work/fpga/Xilinx/artix7/Minimig_ECS_AARS2/rtl/Minimig_ECS/impl1/source/TG68K.vhd"
#    "/home/paul/work/fpga/Xilinx/artix7/Minimig_ECS_AARS2/rtl/source_emard/cfide.vhd"
#    "/home/paul/work/fpga/Xilinx/artix7/Minimig_ECS_AARS2/rtl/Minimig_ECS/impl1/source/TG68K_Pack.vhd"
#    "/home/paul/work/fpga/Xilinx/artix7/Minimig_ECS_AARS2/rtl/Minimig_ECS/impl1/source/TG68KdotC_Kernel.vhd"
#    "/home/paul/work/fpga/Xilinx/artix7/Minimig_ECS_AARS2/rtl/Minimig_ECS/impl1/source/Fampiga.vhd"
#    "/home/paul/work/fpga/Xilinx/artix7/Minimig_ECS_AARS2/rtl/Minimig_ECS/impl1/source/TG68K_ALU.vhd"
#    "/home/paul/work/fpga/Xilinx/artix7/Minimig_ECS_AARS2/rtl/source_emard/poweronreset.vhd"
#    "/home/paul/work/fpga/Xilinx/artix7/Minimig_ECS_AARS2/rtl/rtl_emard/generic/bram_true2p_1clk.vhd"
#    "/home/paul/work/fpga/Xilinx/artix7/Minimig_ECS_AARS2/rtl/jbboot.vhd"
#    "/home/paul/work/fpga/Xilinx/artix7/Minimig_ECS_AARS2/rtl/amiga_ffm_a7100_lcse.vhd"
#    "/home/paul/work/fpga/Xilinx/artix7/Minimig_ECS_AARS2/rtl/rtl_emard/vga/hdmi/tmds_encoder.vhd"
#    "/home/paul/work/fpga/Xilinx/artix7/Minimig_ECS_AARS2/rtl/rtl_emard/vga/hdmi/vga2dvid.vhd"
#    "/home/paul/work/fpga/Xilinx/artix7/Minimig_ECS_AARS2/rtl/rtl_emard/spdif/spdif_tx.vhd"
#    "/home/paul/work/fpga/Xilinx/artix7/Minimig_ECS_AARS2/rtl/Minimig_ECS/impl1/source/HDMI/dvienc_defs.vhd"
#    "/home/paul/work/fpga/Xilinx/artix7/Minimig_ECS_AARS2/rtl/osdload.vhd"
#    "/home/paul/work/fpga/Xilinx/artix7/Minimig_ECS_AARS2/rtl/Minimig_ECS/RTL/sdram_cache.vhd"
#    "/home/paul/work/fpga/Xilinx/artix7/Minimig_ECS_AARS2/rtl/adv7511/i2c_sender.vhd"
#    "/home/paul/work/fpga/Xilinx/artix7/Minimig_ECS_AARS2/rtl/adv7511/i2c_master.v"
#    "/home/paul/work/fpga/Xilinx/artix7/Minimig_ECS_AARS2/rtl/adv7511/adv_ddr.v"
#    "/home/paul/work/fpga/Xilinx/artix7/Minimig_ECS_AARS2/rtl/adv7511/pal_to_ddr.sv"
#    "/home/paul/work/fpga/Xilinx/artix7/Minimig_ECS_AARS2/rtl/adv7511/pal_to_hd_upsample.v"
#    "/home/paul/work/fpga/Xilinx/artix7/Minimig_ECS_AARS2/rtl/adv7511/signal_generator.sv"
#    "/home/paul/work/fpga/Xilinx/artix7/Minimig_ECS_AARS2/rtl/adv7511/bram_tdp.v"
#    "/home/paul/work/fpga/Xilinx/artix7/Minimig_ECS_AARS2/rtl/Minimig_ECS/RTL/PS2Keyboard.v"
#    "/home/paul/work/fpga/Xilinx/artix7/Minimig_ECS_AARS2/rtl/Minimig_ECS/impl1/source/Beamcounter.v"
#    "/home/paul/work/fpga/Xilinx/artix7/Minimig_ECS_AARS2/rtl/Minimig_ECS/impl1/source/Blitter.v"
#    "/home/paul/work/fpga/Xilinx/artix7/Minimig_ECS_AARS2/rtl/Minimig_ECS/impl1/source/Copper.v"
#    "/home/paul/work/fpga/Xilinx/artix7/Minimig_ECS_AARS2/rtl/Minimig_ECS/impl1/source/Agnus.v"
#    "/home/paul/work/fpga/Xilinx/artix7/Minimig_ECS_AARS2/rtl/source_emard/Userio.v"
#    "/home/paul/work/fpga/Xilinx/artix7/Minimig_ECS_AARS2/rtl/Minimig_ECS/impl1/source/Bitplanes.v"
#    "/home/paul/work/fpga/Xilinx/artix7/Minimig_ECS_AARS2/rtl/Minimig_ECS/impl1/source/Sprites.v"
#    "/home/paul/work/fpga/Xilinx/artix7/Minimig_ECS_AARS2/rtl/Minimig_ECS/impl1/source/Denise.v"
#    "/home/paul/work/fpga/Xilinx/artix7/Minimig_ECS_AARS2/rtl/Minimig_ECS/impl1/source/Amber.v"
#    "/home/paul/work/fpga/Xilinx/artix7/Minimig_ECS_AARS2/rtl/Minimig_ECS/impl1/source/Gary.v"
#    "/home/paul/work/fpga/Xilinx/artix7/Minimig_ECS_AARS2/rtl/Minimig_ECS/impl1/source/Gayle.v"
#    "/home/paul/work/fpga/Xilinx/artix7/Minimig_ECS_AARS2/rtl/Minimig_ECS/impl1/source/Audio.v"
#    "/home/paul/work/fpga/Xilinx/artix7/Minimig_ECS_AARS2/rtl/Minimig_ECS/impl1/source/Floppy.v"
#    "/home/paul/work/fpga/Xilinx/artix7/Minimig_ECS_AARS2/rtl/Minimig_ECS/impl1/source/Paula.v"
#    "/home/paul/work/fpga/Xilinx/artix7/Minimig_ECS_AARS2/cons/aars_v4.0_lite/adv7511_video.xdc"
#    "/home/paul/work/fpga/Xilinx/artix7/Minimig_ECS_AARS2/cons/aars_v4.0_lite/floppy.xdc"
#    "/home/paul/work/fpga/Xilinx/artix7/Minimig_ECS_AARS2/cons/aars_v4.0_lite/generic.xdc"
#    "/home/paul/work/fpga/Xilinx/artix7/Minimig_ECS_AARS2/cons/aars_v4.0_lite/i2s.xdc"
#    "/home/paul/work/fpga/Xilinx/artix7/Minimig_ECS_AARS2/cons/aars_v4.0_lite/joystick.xdc"
#    "/home/paul/work/fpga/Xilinx/artix7/Minimig_ECS_AARS2/cons/aars_v4.0_lite/leds.xdc"
#    "/home/paul/work/fpga/Xilinx/artix7/Minimig_ECS_AARS2/cons/aars_v4.0_lite/ps2.xdc"
#    "/home/paul/work/fpga/Xilinx/artix7/Minimig_ECS_AARS2/cons/aars_v4.0_lite/sdram.xdc"
#    "/home/paul/work/fpga/Xilinx/artix7/Minimig_ECS_AARS2/cons/aars_v4.0_lite/buttons.xdc"
#    "/home/paul/work/fpga/Xilinx/artix7/Minimig_ECS_AARS2/cons/aars_v4.0_lite/pmod.xdc"
#    "/home/paul/work/fpga/Xilinx/artix7/Minimig_ECS_AARS2/cons/aars_v4.0_lite/sd_card.xdc"
#    "/home/paul/work/fpga/Xilinx/artix7/Minimig_ECS_AARS2/cons/aars_v4.0_lite/uart.xdc"
#    "/home/paul/work/fpga/Xilinx/artix7/Minimig_ECS_AARS2/cons/aars_v4.0_lite/wizard.xdc"
#    "/home/paul/work/fpga/Xilinx/artix7/Minimig_ECS_AARS2/sim/adv_ddr_sim/sim_top.v"
#
#*****************************************************************************************

# Set the reference directory for source file relative paths (by default the value is script directory path)
set origin_dir "."

# Use origin directory path location variable, if specified in the tcl shell
if { [info exists ::origin_dir_loc] } {
  set origin_dir $::origin_dir_loc
}

# Set the project name
set _xil_proj_name_ "project_1"

# Use project name variable, if specified in the tcl shell
if { [info exists ::user_project_name] } {
  set _xil_proj_name_ $::user_project_name
}

variable script_file
set script_file "rebuild.tcl"

# Help information for this script
proc print_help {} {
  variable script_file
  puts "\nDescription:"
  puts "Recreate a Vivado project from this script. The created project will be"
  puts "functionally equivalent to the original project for which this script was"
  puts "generated. The script contains commands for creating a project, filesets,"
  puts "runs, adding/importing sources and setting properties on various objects.\n"
  puts "Syntax:"
  puts "$script_file"
  puts "$script_file -tclargs \[--origin_dir <path>\]"
  puts "$script_file -tclargs \[--project_name <name>\]"
  puts "$script_file -tclargs \[--help\]\n"
  puts "Usage:"
  puts "Name                   Description"
  puts "-------------------------------------------------------------------------"
  puts "\[--origin_dir <path>\]  Determine source file paths wrt this path. Default"
  puts "                       origin_dir path value is \".\", otherwise, the value"
  puts "                       that was set with the \"-paths_relative_to\" switch"
  puts "                       when this script was generated.\n"
  puts "\[--project_name <name>\] Create project with the specified name. Default"
  puts "                       name is the name of the project from where this"
  puts "                       script was generated.\n"
  puts "\[--help\]               Print help information for this script"
  puts "-------------------------------------------------------------------------\n"
  exit 0
}

if { $::argc > 0 } {
  for {set i 0} {$i < $::argc} {incr i} {
    set option [string trim [lindex $::argv $i]]
    switch -regexp -- $option {
      "--origin_dir"   { incr i; set origin_dir [lindex $::argv $i] }
      "--project_name" { incr i; set _xil_proj_name_ [lindex $::argv $i] }
      "--help"         { print_help }
      default {
        if { [regexp {^-} $option] } {
          puts "ERROR: Unknown option '$option' specified, please type '$script_file -tclargs --help' for usage info.\n"
          return 1
        }
      }
    }
  }
}

# Set the directory path for the original project from where this script was exported
set orig_proj_dir "[file normalize "$origin_dir/project_1"]"

# Create project
create_project ${_xil_proj_name_} ./${_xil_proj_name_} -part xc7a100tfgg676-2

# Set the directory path for the new project
set proj_dir [get_property directory [current_project]]

# Set project properties
set obj [current_project]
set_property -name "corecontainer.enable" -value "1" -objects $obj
set_property -name "default_lib" -value "work" -objects $obj
set_property -name "enable_core_container" -value "1" -objects $obj
set_property -name "enable_vhdl_2008" -value "1" -objects $obj
set_property -name "ip_cache_permissions" -value "read write" -objects $obj
set_property -name "ip_output_repo" -value "$proj_dir/${_xil_proj_name_}.cache/ip" -objects $obj
set_property -name "mem.enable_memory_map_generation" -value "1" -objects $obj
set_property -name "part" -value "xc7a100tfgg676-2" -objects $obj
set_property -name "sim.central_dir" -value "$proj_dir/${_xil_proj_name_}.ip_user_files" -objects $obj
set_property -name "sim.ip.auto_export_scripts" -value "1" -objects $obj
set_property -name "simulator_language" -value "Mixed" -objects $obj
set_property -name "source_mgmt_mode" -value "DisplayOnly" -objects $obj
set_property -name "webtalk.activehdl_export_sim" -value "1" -objects $obj
set_property -name "webtalk.ies_export_sim" -value "1" -objects $obj
set_property -name "webtalk.modelsim_export_sim" -value "1" -objects $obj
set_property -name "webtalk.questa_export_sim" -value "1" -objects $obj
set_property -name "webtalk.riviera_export_sim" -value "1" -objects $obj
set_property -name "webtalk.vcs_export_sim" -value "1" -objects $obj
set_property -name "webtalk.xsim_export_sim" -value "1" -objects $obj
set_property -name "webtalk.xsim_launch_sim" -value "46" -objects $obj

# Create 'sources_1' fileset (if not found)
if {[string equal [get_filesets -quiet sources_1] ""]} {
  create_fileset -srcset sources_1
}

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 [file normalize "${origin_dir}/rtl/Minimig_ECS/impl1/source/CIA8520.v"] \
 [file normalize "${origin_dir}/rtl/Minimig_ECS/impl1/source/Clock.v"] \
 [file normalize "${origin_dir}/rtl/source_emard/Minimig1.v"] \
 [file normalize "${origin_dir}/rtl/i2s_tx.v"] \
 [file normalize "${origin_dir}/rtl/mcp23s17/mcp23s17_input.v"] \
 [file normalize "${origin_dir}/rtl/mcp23s17/spi_master.v"] \
 [file normalize "${origin_dir}/rtl/source_emard/twowaycache.v"] \
 [file normalize "${origin_dir}/rtl/Minimig_ECS/impl1/source/Debounce.vhd"] \
 [file normalize "${origin_dir}/rtl/Minimig_ECS/impl1/source/TG68K.vhd"] \
 [file normalize "${origin_dir}/rtl/source_emard/cfide.vhd"] \
 [file normalize "${origin_dir}/rtl/Minimig_ECS/impl1/source/TG68K_Pack.vhd"] \
 [file normalize "${origin_dir}/rtl/Minimig_ECS/impl1/source/TG68KdotC_Kernel.vhd"] \
 [file normalize "${origin_dir}/rtl/Minimig_ECS/impl1/source/Fampiga.vhd"] \
 [file normalize "${origin_dir}/rtl/Minimig_ECS/impl1/source/TG68K_ALU.vhd"] \
 [file normalize "${origin_dir}/rtl/source_emard/poweronreset.vhd"] \
 [file normalize "${origin_dir}/rtl/rtl_emard/generic/bram_true2p_1clk.vhd"] \
 [file normalize "${origin_dir}/rtl/jbboot.vhd"] \
 [file normalize "${origin_dir}/rtl/amiga_ffm_a7100_lcse.vhd"] \
 [file normalize "${origin_dir}/rtl/rtl_emard/vga/hdmi/tmds_encoder.vhd"] \
 [file normalize "${origin_dir}/rtl/rtl_emard/vga/hdmi/vga2dvid.vhd"] \
 [file normalize "${origin_dir}/rtl/rtl_emard/spdif/spdif_tx.vhd"] \
 [file normalize "${origin_dir}/rtl/Minimig_ECS/impl1/source/HDMI/dvienc_defs.vhd"] \
 [file normalize "${origin_dir}/rtl/osdload.vhd"] \
 [file normalize "${origin_dir}/rtl/Minimig_ECS/RTL/sdram_cache.vhd"] \
 [file normalize "${origin_dir}/rtl/adv7511/i2c_sender.vhd"] \
 [file normalize "${origin_dir}/rtl/adv7511/i2c_master.v"] \
 [file normalize "${origin_dir}/rtl/adv7511/adv_ddr.v"] \
 [file normalize "${origin_dir}/rtl/adv7511/pal_to_ddr.sv"] \
 [file normalize "${origin_dir}/rtl/adv7511/pal_to_hd_upsample.v"] \
 [file normalize "${origin_dir}/rtl/adv7511/signal_generator.sv"] \
 [file normalize "${origin_dir}/rtl/adv7511/bram_tdp.v"] \
 [file normalize "${origin_dir}/rtl/Minimig_ECS/RTL/PS2Keyboard.v"] \
]
add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset file properties for remote files
set file "$origin_dir/rtl/Minimig_ECS/impl1/source/CIA8520.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "library" -value "work" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation" -objects $file_obj
set_property -name "used_in_simulation" -value "0" -objects $file_obj

set file "$origin_dir/rtl/Minimig_ECS/impl1/source/Clock.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "library" -value "work" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation" -objects $file_obj
set_property -name "used_in_simulation" -value "0" -objects $file_obj

set file "$origin_dir/rtl/source_emard/Minimig1.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "library" -value "work" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation" -objects $file_obj
set_property -name "used_in_simulation" -value "0" -objects $file_obj

set file "$origin_dir/rtl/i2s_tx.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "library" -value "work" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation" -objects $file_obj
set_property -name "used_in_simulation" -value "0" -objects $file_obj

set file "$origin_dir/rtl/mcp23s17/mcp23s17_input.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "library" -value "work" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation" -objects $file_obj
set_property -name "used_in_simulation" -value "0" -objects $file_obj

set file "$origin_dir/rtl/mcp23s17/spi_master.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "library" -value "work" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation" -objects $file_obj
set_property -name "used_in_simulation" -value "0" -objects $file_obj

set file "$origin_dir/rtl/source_emard/twowaycache.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "library" -value "work" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation" -objects $file_obj
set_property -name "used_in_simulation" -value "0" -objects $file_obj

set file "$origin_dir/rtl/Minimig_ECS/impl1/source/Debounce.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj
set_property -name "library" -value "work" -objects $file_obj
set_property -name "used_in" -value "synthesis" -objects $file_obj
set_property -name "used_in_simulation" -value "0" -objects $file_obj

set file "$origin_dir/rtl/Minimig_ECS/impl1/source/TG68K.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj
set_property -name "library" -value "work" -objects $file_obj
set_property -name "used_in" -value "synthesis" -objects $file_obj
set_property -name "used_in_simulation" -value "0" -objects $file_obj

set file "$origin_dir/rtl/source_emard/cfide.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj
set_property -name "library" -value "work" -objects $file_obj
set_property -name "used_in" -value "synthesis" -objects $file_obj
set_property -name "used_in_simulation" -value "0" -objects $file_obj

set file "$origin_dir/rtl/Minimig_ECS/impl1/source/TG68K_Pack.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj
set_property -name "library" -value "work" -objects $file_obj

set file "$origin_dir/rtl/Minimig_ECS/impl1/source/TG68KdotC_Kernel.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj
set_property -name "library" -value "work" -objects $file_obj
set_property -name "used_in" -value "synthesis" -objects $file_obj
set_property -name "used_in_simulation" -value "0" -objects $file_obj

set file "$origin_dir/rtl/Minimig_ECS/impl1/source/Fampiga.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj
set_property -name "library" -value "work" -objects $file_obj
set_property -name "used_in" -value "synthesis" -objects $file_obj
set_property -name "used_in_simulation" -value "0" -objects $file_obj

set file "$origin_dir/rtl/Minimig_ECS/impl1/source/TG68K_ALU.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj
set_property -name "library" -value "work" -objects $file_obj
set_property -name "used_in" -value "synthesis" -objects $file_obj
set_property -name "used_in_simulation" -value "0" -objects $file_obj

set file "$origin_dir/rtl/source_emard/poweronreset.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj
set_property -name "library" -value "work" -objects $file_obj
set_property -name "used_in" -value "synthesis" -objects $file_obj
set_property -name "used_in_simulation" -value "0" -objects $file_obj

set file "$origin_dir/rtl/rtl_emard/generic/bram_true2p_1clk.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj
set_property -name "library" -value "work" -objects $file_obj
set_property -name "used_in" -value "synthesis" -objects $file_obj
set_property -name "used_in_simulation" -value "0" -objects $file_obj

set file "$origin_dir/rtl/jbboot.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj
set_property -name "library" -value "work" -objects $file_obj
set_property -name "used_in" -value "synthesis" -objects $file_obj
set_property -name "used_in_simulation" -value "0" -objects $file_obj

set file "$origin_dir/rtl/amiga_ffm_a7100_lcse.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj
set_property -name "library" -value "work" -objects $file_obj
set_property -name "used_in" -value "synthesis" -objects $file_obj
set_property -name "used_in_simulation" -value "0" -objects $file_obj

set file "$origin_dir/rtl/rtl_emard/vga/hdmi/tmds_encoder.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj
set_property -name "is_enabled" -value "0" -objects $file_obj
set_property -name "library" -value "work" -objects $file_obj

set file "$origin_dir/rtl/rtl_emard/vga/hdmi/vga2dvid.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj
set_property -name "is_enabled" -value "0" -objects $file_obj
set_property -name "library" -value "work" -objects $file_obj

set file "$origin_dir/rtl/rtl_emard/spdif/spdif_tx.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj
set_property -name "is_enabled" -value "0" -objects $file_obj
set_property -name "library" -value "work" -objects $file_obj

set file "$origin_dir/rtl/Minimig_ECS/impl1/source/HDMI/dvienc_defs.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj
set_property -name "library" -value "work" -objects $file_obj

set file "$origin_dir/rtl/osdload.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj
set_property -name "library" -value "work" -objects $file_obj

set file "$origin_dir/rtl/Minimig_ECS/RTL/sdram_cache.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj
set_property -name "library" -value "work" -objects $file_obj

set file "$origin_dir/rtl/adv7511/i2c_sender.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj
set_property -name "library" -value "work" -objects $file_obj

set file "$origin_dir/rtl/adv7511/i2c_master.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "library" -value "work" -objects $file_obj

set file "$origin_dir/rtl/adv7511/adv_ddr.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "library" -value "work" -objects $file_obj

set file "$origin_dir/rtl/adv7511/pal_to_ddr.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
set_property -name "library" -value "work" -objects $file_obj

set file "$origin_dir/rtl/adv7511/pal_to_hd_upsample.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "library" -value "work" -objects $file_obj

set file "$origin_dir/rtl/adv7511/signal_generator.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
set_property -name "library" -value "work" -objects $file_obj

set file "$origin_dir/rtl/adv7511/bram_tdp.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "library" -value "work" -objects $file_obj

set file "$origin_dir/rtl/Minimig_ECS/RTL/PS2Keyboard.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "library" -value "work" -objects $file_obj


# Set 'sources_1' fileset file properties for local files
# None

# Set 'sources_1' fileset properties
set obj [get_filesets sources_1]
set_property -name "top" -value "amiga_ffm_a7100" -objects $obj

# Create 'Agnus' fileset (if not found)
if {[string equal [get_filesets -quiet Agnus] ""]} {
  create_fileset -blockset Agnus
}

# Set 'Agnus' fileset object
set obj [get_filesets Agnus]
set files [list \
 [file normalize "${origin_dir}/rtl/Minimig_ECS/impl1/source/Beamcounter.v"] \
 [file normalize "${origin_dir}/rtl/Minimig_ECS/impl1/source/Blitter.v"] \
 [file normalize "${origin_dir}/rtl/Minimig_ECS/impl1/source/Copper.v"] \
 [file normalize "${origin_dir}/rtl/Minimig_ECS/impl1/source/Agnus.v"] \
]
add_files -norecurse -fileset $obj $files

# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/project_1/project_1.srcs/Agnus/new/Agnus_ooc.xdc" ]\
]
set imported_files [import_files -fileset Agnus $files]

# Set 'Agnus' fileset file properties for remote files
set file "$origin_dir/rtl/Minimig_ECS/impl1/source/Beamcounter.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets Agnus] [list "*$file"]]
set_property -name "library" -value "work" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation" -objects $file_obj
set_property -name "used_in_simulation" -value "0" -objects $file_obj

set file "$origin_dir/rtl/Minimig_ECS/impl1/source/Blitter.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets Agnus] [list "*$file"]]
set_property -name "library" -value "work" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation" -objects $file_obj
set_property -name "used_in_simulation" -value "0" -objects $file_obj

set file "$origin_dir/rtl/Minimig_ECS/impl1/source/Copper.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets Agnus] [list "*$file"]]
set_property -name "library" -value "work" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation" -objects $file_obj
set_property -name "used_in_simulation" -value "0" -objects $file_obj

set file "$origin_dir/rtl/Minimig_ECS/impl1/source/Agnus.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets Agnus] [list "*$file"]]
set_property -name "library" -value "work" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation" -objects $file_obj
set_property -name "used_in_simulation" -value "0" -objects $file_obj


# Set 'Agnus' fileset file properties for local files
set file "new/Agnus_ooc.xdc"
set file_obj [get_files -of_objects [get_filesets Agnus] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj
set_property -name "library" -value "work" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation out_of_context" -objects $file_obj


# Set 'Agnus' fileset properties
set obj [get_filesets Agnus]
set_property -name "top" -value "Agnus" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj
set_property -name "top_file" -value "rtl/Minimig_ECS/impl1/source/Agnus.v" -objects $obj

# Create 'userio' fileset (if not found)
if {[string equal [get_filesets -quiet userio] ""]} {
  create_fileset -blockset userio
}

# Set 'userio' fileset object
set obj [get_filesets userio]
set files [list \
 [file normalize "${origin_dir}/rtl/source_emard/Userio.v"] \
]
add_files -norecurse -fileset $obj $files

# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/project_1/project_1.srcs/userio/new/userio_ooc.xdc" ]\
]
set imported_files [import_files -fileset userio $files]

# Set 'userio' fileset file properties for remote files
set file "$origin_dir/rtl/source_emard/Userio.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets userio] [list "*$file"]]
set_property -name "library" -value "work" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation" -objects $file_obj
set_property -name "used_in_simulation" -value "0" -objects $file_obj


# Set 'userio' fileset file properties for local files
set file "new/userio_ooc.xdc"
set file_obj [get_files -of_objects [get_filesets userio] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj
set_property -name "library" -value "work" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation out_of_context" -objects $file_obj


# Set 'userio' fileset properties
set obj [get_filesets userio]
set_property -name "top" -value "userio" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj
set_property -name "top_file" -value "rtl/source_emard/Userio.v" -objects $obj

# Create 'Denise' fileset (if not found)
if {[string equal [get_filesets -quiet Denise] ""]} {
  create_fileset -blockset Denise
}

# Set 'Denise' fileset object
set obj [get_filesets Denise]
set files [list \
 [file normalize "${origin_dir}/rtl/Minimig_ECS/impl1/source/Bitplanes.v"] \
 [file normalize "${origin_dir}/rtl/Minimig_ECS/impl1/source/Sprites.v"] \
 [file normalize "${origin_dir}/rtl/Minimig_ECS/impl1/source/Denise.v"] \
]
add_files -norecurse -fileset $obj $files

# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/project_1/project_1.srcs/Denise/new/Denise_ooc.xdc" ]\
]
set imported_files [import_files -fileset Denise $files]

# Set 'Denise' fileset file properties for remote files
set file "$origin_dir/rtl/Minimig_ECS/impl1/source/Bitplanes.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets Denise] [list "*$file"]]
set_property -name "library" -value "work" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation" -objects $file_obj
set_property -name "used_in_simulation" -value "0" -objects $file_obj

set file "$origin_dir/rtl/Minimig_ECS/impl1/source/Sprites.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets Denise] [list "*$file"]]
set_property -name "library" -value "work" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation" -objects $file_obj
set_property -name "used_in_simulation" -value "0" -objects $file_obj

set file "$origin_dir/rtl/Minimig_ECS/impl1/source/Denise.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets Denise] [list "*$file"]]
set_property -name "library" -value "work" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation" -objects $file_obj
set_property -name "used_in_simulation" -value "0" -objects $file_obj


# Set 'Denise' fileset file properties for local files
set file "new/Denise_ooc.xdc"
set file_obj [get_files -of_objects [get_filesets Denise] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj
set_property -name "library" -value "work" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation out_of_context" -objects $file_obj


# Set 'Denise' fileset properties
set obj [get_filesets Denise]
set_property -name "top" -value "Denise" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj
set_property -name "top_file" -value "rtl/Minimig_ECS/impl1/source/Denise.v" -objects $obj

# Create 'Amber' fileset (if not found)
if {[string equal [get_filesets -quiet Amber] ""]} {
  create_fileset -blockset Amber
}

# Set 'Amber' fileset object
set obj [get_filesets Amber]
set files [list \
 [file normalize "${origin_dir}/rtl/Minimig_ECS/impl1/source/Amber.v"] \
]
add_files -norecurse -fileset $obj $files

# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/project_1/project_1.srcs/Amber/new/Amber_ooc.xdc" ]\
]
set imported_files [import_files -fileset Amber $files]

# Set 'Amber' fileset file properties for remote files
set file "$origin_dir/rtl/Minimig_ECS/impl1/source/Amber.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets Amber] [list "*$file"]]
set_property -name "library" -value "work" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation" -objects $file_obj
set_property -name "used_in_simulation" -value "0" -objects $file_obj


# Set 'Amber' fileset file properties for local files
set file "new/Amber_ooc.xdc"
set file_obj [get_files -of_objects [get_filesets Amber] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj
set_property -name "library" -value "work" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation out_of_context" -objects $file_obj


# Set 'Amber' fileset properties
set obj [get_filesets Amber]
set_property -name "top" -value "Amber" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj
set_property -name "top_file" -value "rtl/Minimig_ECS/impl1/source/Amber.v" -objects $obj

# Create 'gary' fileset (if not found)
if {[string equal [get_filesets -quiet gary] ""]} {
  create_fileset -blockset gary
}

# Set 'gary' fileset object
set obj [get_filesets gary]
set files [list \
 [file normalize "${origin_dir}/rtl/Minimig_ECS/impl1/source/Gary.v"] \
]
add_files -norecurse -fileset $obj $files

# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/project_1/project_1.srcs/gary/new/gary_ooc.xdc" ]\
]
set imported_files [import_files -fileset gary $files]

# Set 'gary' fileset file properties for remote files
set file "$origin_dir/rtl/Minimig_ECS/impl1/source/Gary.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets gary] [list "*$file"]]
set_property -name "library" -value "work" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation" -objects $file_obj
set_property -name "used_in_simulation" -value "0" -objects $file_obj


# Set 'gary' fileset file properties for local files
set file "new/gary_ooc.xdc"
set file_obj [get_files -of_objects [get_filesets gary] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj
set_property -name "library" -value "work" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation out_of_context" -objects $file_obj


# Set 'gary' fileset properties
set obj [get_filesets gary]
set_property -name "top" -value "gary" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj
set_property -name "top_file" -value "rtl/Minimig_ECS/impl1/source/Gary.v" -objects $obj

# Create 'gayle' fileset (if not found)
if {[string equal [get_filesets -quiet gayle] ""]} {
  create_fileset -blockset gayle
}

# Set 'gayle' fileset object
set obj [get_filesets gayle]
set files [list \
 [file normalize "${origin_dir}/rtl/Minimig_ECS/impl1/source/Gayle.v"] \
]
add_files -norecurse -fileset $obj $files

# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/project_1/project_1.srcs/gayle/new/gayle_ooc.xdc" ]\
]
set imported_files [import_files -fileset gayle $files]

# Set 'gayle' fileset file properties for remote files
set file "$origin_dir/rtl/Minimig_ECS/impl1/source/Gayle.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets gayle] [list "*$file"]]
set_property -name "library" -value "work" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation" -objects $file_obj
set_property -name "used_in_simulation" -value "0" -objects $file_obj


# Set 'gayle' fileset file properties for local files
set file "new/gayle_ooc.xdc"
set file_obj [get_files -of_objects [get_filesets gayle] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj
set_property -name "library" -value "work" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation out_of_context" -objects $file_obj


# Set 'gayle' fileset properties
set obj [get_filesets gayle]
set_property -name "top" -value "gayle" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj
set_property -name "top_file" -value "rtl/Minimig_ECS/impl1/source/Gayle.v" -objects $obj

# Create 'Paula' fileset (if not found)
if {[string equal [get_filesets -quiet Paula] ""]} {
  create_fileset -blockset Paula
}

# Set 'Paula' fileset object
set obj [get_filesets Paula]
set files [list \
 [file normalize "${origin_dir}/rtl/Minimig_ECS/impl1/source/Audio.v"] \
 [file normalize "${origin_dir}/rtl/Minimig_ECS/impl1/source/Floppy.v"] \
 [file normalize "${origin_dir}/rtl/Minimig_ECS/impl1/source/Paula.v"] \
]
add_files -norecurse -fileset $obj $files

# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/project_1/project_1.srcs/Paula/new/Paula_ooc.xdc" ]\
]
set imported_files [import_files -fileset Paula $files]

# Set 'Paula' fileset file properties for remote files
set file "$origin_dir/rtl/Minimig_ECS/impl1/source/Audio.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets Paula] [list "*$file"]]
set_property -name "library" -value "work" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation" -objects $file_obj
set_property -name "used_in_simulation" -value "0" -objects $file_obj

set file "$origin_dir/rtl/Minimig_ECS/impl1/source/Floppy.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets Paula] [list "*$file"]]
set_property -name "library" -value "work" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation" -objects $file_obj
set_property -name "used_in_simulation" -value "0" -objects $file_obj

set file "$origin_dir/rtl/Minimig_ECS/impl1/source/Paula.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets Paula] [list "*$file"]]
set_property -name "library" -value "work" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation" -objects $file_obj
set_property -name "used_in_simulation" -value "0" -objects $file_obj


# Set 'Paula' fileset file properties for local files
set file "new/Paula_ooc.xdc"
set file_obj [get_files -of_objects [get_filesets Paula] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj
set_property -name "library" -value "work" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation out_of_context" -objects $file_obj


# Set 'Paula' fileset properties
set obj [get_filesets Paula]
set_property -name "top" -value "Paula" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj
set_property -name "top_file" -value "rtl/Minimig_ECS/impl1/source/Paula.v" -objects $obj

# Create 'constrs_1' fileset (if not found)
if {[string equal [get_filesets -quiet constrs_1] ""]} {
  create_fileset -constrset constrs_1
}

# Set 'constrs_1' fileset object
set obj [get_filesets constrs_1]

# Empty (no sources present)

# Set 'constrs_1' fileset properties
set obj [get_filesets constrs_1]
set_property -name "target_part" -value "xc7a100tfgg676-2" -objects $obj

# Create 'AARS_V4.0' fileset (if not found)
if {[string equal [get_filesets -quiet AARS_V4.0] ""]} {
  create_fileset -constrset AARS_V4.0
}

# Set 'AARS_V4.0' fileset object
set obj [get_filesets AARS_V4.0]

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/cons/aars_v4.0_lite/adv7511_video.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/cons/aars_v4.0_lite/adv7511_video.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets AARS_V4.0] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj
set_property -name "library" -value "work" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/cons/aars_v4.0_lite/floppy.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/cons/aars_v4.0_lite/floppy.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets AARS_V4.0] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj
set_property -name "library" -value "work" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/cons/aars_v4.0_lite/generic.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/cons/aars_v4.0_lite/generic.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets AARS_V4.0] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj
set_property -name "library" -value "work" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/cons/aars_v4.0_lite/i2s.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/cons/aars_v4.0_lite/i2s.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets AARS_V4.0] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj
set_property -name "library" -value "work" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/cons/aars_v4.0_lite/joystick.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/cons/aars_v4.0_lite/joystick.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets AARS_V4.0] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj
set_property -name "library" -value "work" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/cons/aars_v4.0_lite/leds.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/cons/aars_v4.0_lite/leds.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets AARS_V4.0] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj
set_property -name "library" -value "work" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/cons/aars_v4.0_lite/ps2.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/cons/aars_v4.0_lite/ps2.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets AARS_V4.0] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj
set_property -name "library" -value "work" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/cons/aars_v4.0_lite/sdram.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/cons/aars_v4.0_lite/sdram.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets AARS_V4.0] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj
set_property -name "library" -value "work" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/cons/aars_v4.0_lite/buttons.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/cons/aars_v4.0_lite/buttons.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets AARS_V4.0] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj
set_property -name "library" -value "work" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/cons/aars_v4.0_lite/pmod.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/cons/aars_v4.0_lite/pmod.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets AARS_V4.0] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj
set_property -name "library" -value "work" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/cons/aars_v4.0_lite/sd_card.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/cons/aars_v4.0_lite/sd_card.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets AARS_V4.0] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj
set_property -name "library" -value "work" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/cons/aars_v4.0_lite/uart.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/cons/aars_v4.0_lite/uart.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets AARS_V4.0] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj
set_property -name "library" -value "work" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/cons/aars_v4.0_lite/wizard.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/cons/aars_v4.0_lite/wizard.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets AARS_V4.0] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj
set_property -name "library" -value "work" -objects $file_obj

# Set 'AARS_V4.0' fileset properties
set obj [get_filesets AARS_V4.0]
set_property -name "target_constrs_file" -value "[file normalize "$origin_dir/cons/aars_v4.0_lite/wizard.xdc"]" -objects $obj
set_property -name "target_part" -value "xc7a100tfgg676-2" -objects $obj
set_property -name "target_ucf" -value "[file normalize "$origin_dir/cons/aars_v4.0_lite/wizard.xdc"]" -objects $obj

# Create 'adv_ddr' fileset (if not found)
if {[string equal [get_filesets -quiet adv_ddr] ""]} {
  create_fileset -simset adv_ddr
}

# Set 'adv_ddr' fileset object
set obj [get_filesets adv_ddr]
set files [list \
 [file normalize "${origin_dir}/sim/adv_ddr_sim/sim_top.v"] \
]
add_files -norecurse -fileset $obj $files

# Set 'adv_ddr' fileset file properties for remote files
set file "$origin_dir/sim/adv_ddr_sim/sim_top.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets adv_ddr] [list "*$file"]]
set_property -name "library" -value "work" -objects $file_obj
set_property -name "used_in" -value "simulation" -objects $file_obj
set_property -name "used_in_implementation" -value "0" -objects $file_obj
set_property -name "used_in_synthesis" -value "0" -objects $file_obj


# Set 'adv_ddr' fileset file properties for local files
# None

# Set 'adv_ddr' fileset properties
set obj [get_filesets adv_ddr]
set_property -name "hbs.configure_design_for_hier_access" -value "1" -objects $obj
set_property -name "top" -value "sim_toptb" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj

# Set 'utils_1' fileset object
set obj [get_filesets utils_1]
# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/project_1/project_1.srcs/utils_1/imports/impl_1/amiga_ffm_a7100_routed.dcp"]\
 [file normalize "${origin_dir}/project_1/project_1.srcs/utils_1/imports/synth_1/amiga_ffm_a7100.dcp"]\
]
set imported_files [import_files -fileset utils_1 $files]

# Set 'utils_1' fileset file properties for remote files
# None

# Set 'utils_1' fileset file properties for local files
set file "impl_1/amiga_ffm_a7100_routed.dcp"
set file_obj [get_files -of_objects [get_filesets utils_1] [list "*$file"]]
set_property -name "library" -value "work" -objects $file_obj
set_property -name "netlist_only" -value "0" -objects $file_obj

set file "synth_1/amiga_ffm_a7100.dcp"
set file_obj [get_files -of_objects [get_filesets utils_1] [list "*$file"]]
set_property -name "library" -value "work" -objects $file_obj
set_property -name "netlist_only" -value "0" -objects $file_obj


# Set 'utils_1' fileset properties
set obj [get_filesets utils_1]

# Create 'synth_1' run (if not found)
if {[string equal [get_runs -quiet synth_1] ""]} {
    create_run -name synth_1 -part xc7a100tfgg676-2 -flow {Vivado Synthesis 2020} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset AARS_V4.0
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs synth_1]
  set_property flow "Vivado Synthesis 2020" [get_runs synth_1]
}
set obj [get_runs synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs synth_1
}
set obj [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs synth_1]
set_property -name "constrset" -value "AARS_V4.0" -objects $obj
set_property -name "part" -value "xc7a100tfgg676-2" -objects $obj
set_property -name "incremental_checkpoint" -value "$proj_dir/project_1.srcs/utils_1/imports/synth_1/amiga_ffm_a7100.dcp" -objects $obj
set_property -name "auto_incremental_checkpoint" -value "1" -objects $obj
set_property -name "write_incremental_synth_checkpoint" -value "1" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# Create 'Agnus_synth_1' run (if not found)
if {[string equal [get_runs -quiet Agnus_synth_1] ""]} {
    create_run -name Agnus_synth_1 -part xc7a100tfgg676-2 -flow {Vivado Synthesis 2020} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset Agnus
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs Agnus_synth_1]
  set_property flow "Vivado Synthesis 2020" [get_runs Agnus_synth_1]
}
set obj [get_runs Agnus_synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'Agnus_synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Agnus_synth_1] Agnus_synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name Agnus_synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs Agnus_synth_1
}
set obj [get_report_configs -of_objects [get_runs Agnus_synth_1] Agnus_synth_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs Agnus_synth_1]
set_property -name "constrset" -value "Agnus" -objects $obj
set_property -name "part" -value "xc7a100tfgg676-2" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# Create 'userio_synth_1' run (if not found)
if {[string equal [get_runs -quiet userio_synth_1] ""]} {
    create_run -name userio_synth_1 -part xc7a100tfgg676-2 -flow {Vivado Synthesis 2020} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset userio
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs userio_synth_1]
  set_property flow "Vivado Synthesis 2020" [get_runs userio_synth_1]
}
set obj [get_runs userio_synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'userio_synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs userio_synth_1] userio_synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name userio_synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs userio_synth_1
}
set obj [get_report_configs -of_objects [get_runs userio_synth_1] userio_synth_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs userio_synth_1]
set_property -name "constrset" -value "userio" -objects $obj
set_property -name "part" -value "xc7a100tfgg676-2" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# Create 'Denise_synth_1' run (if not found)
if {[string equal [get_runs -quiet Denise_synth_1] ""]} {
    create_run -name Denise_synth_1 -part xc7a100tfgg676-2 -flow {Vivado Synthesis 2020} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset Denise
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs Denise_synth_1]
  set_property flow "Vivado Synthesis 2020" [get_runs Denise_synth_1]
}
set obj [get_runs Denise_synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'Denise_synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Denise_synth_1] Denise_synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name Denise_synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs Denise_synth_1
}
set obj [get_report_configs -of_objects [get_runs Denise_synth_1] Denise_synth_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs Denise_synth_1]
set_property -name "constrset" -value "Denise" -objects $obj
set_property -name "part" -value "xc7a100tfgg676-2" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# Create 'Amber_synth_1' run (if not found)
if {[string equal [get_runs -quiet Amber_synth_1] ""]} {
    create_run -name Amber_synth_1 -part xc7a100tfgg676-2 -flow {Vivado Synthesis 2020} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset Amber
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs Amber_synth_1]
  set_property flow "Vivado Synthesis 2020" [get_runs Amber_synth_1]
}
set obj [get_runs Amber_synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'Amber_synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Amber_synth_1] Amber_synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name Amber_synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs Amber_synth_1
}
set obj [get_report_configs -of_objects [get_runs Amber_synth_1] Amber_synth_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs Amber_synth_1]
set_property -name "constrset" -value "Amber" -objects $obj
set_property -name "part" -value "xc7a100tfgg676-2" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# Create 'gary_synth_1' run (if not found)
if {[string equal [get_runs -quiet gary_synth_1] ""]} {
    create_run -name gary_synth_1 -part xc7a100tfgg676-2 -flow {Vivado Synthesis 2020} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset gary
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs gary_synth_1]
  set_property flow "Vivado Synthesis 2020" [get_runs gary_synth_1]
}
set obj [get_runs gary_synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'gary_synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs gary_synth_1] gary_synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name gary_synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs gary_synth_1
}
set obj [get_report_configs -of_objects [get_runs gary_synth_1] gary_synth_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs gary_synth_1]
set_property -name "constrset" -value "gary" -objects $obj
set_property -name "part" -value "xc7a100tfgg676-2" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# Create 'gayle_synth_1' run (if not found)
if {[string equal [get_runs -quiet gayle_synth_1] ""]} {
    create_run -name gayle_synth_1 -part xc7a100tfgg676-2 -flow {Vivado Synthesis 2020} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset gayle
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs gayle_synth_1]
  set_property flow "Vivado Synthesis 2020" [get_runs gayle_synth_1]
}
set obj [get_runs gayle_synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'gayle_synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs gayle_synth_1] gayle_synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name gayle_synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs gayle_synth_1
}
set obj [get_report_configs -of_objects [get_runs gayle_synth_1] gayle_synth_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs gayle_synth_1]
set_property -name "constrset" -value "gayle" -objects $obj
set_property -name "part" -value "xc7a100tfgg676-2" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# Create 'Paula_synth_1' run (if not found)
if {[string equal [get_runs -quiet Paula_synth_1] ""]} {
    create_run -name Paula_synth_1 -part xc7a100tfgg676-2 -flow {Vivado Synthesis 2020} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset Paula
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs Paula_synth_1]
  set_property flow "Vivado Synthesis 2020" [get_runs Paula_synth_1]
}
set obj [get_runs Paula_synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'Paula_synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Paula_synth_1] Paula_synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name Paula_synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs Paula_synth_1
}
set obj [get_report_configs -of_objects [get_runs Paula_synth_1] Paula_synth_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs Paula_synth_1]
set_property -name "constrset" -value "Paula" -objects $obj
set_property -name "part" -value "xc7a100tfgg676-2" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# set the current synth run
current_run -synthesis [get_runs synth_1]

# Create 'impl_1' run (if not found)
if {[string equal [get_runs -quiet impl_1] ""]} {
    create_run -name impl_1 -part xc7a100tfgg676-2 -flow {Vivado Implementation 2020} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset AARS_V4.0 -parent_run synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_1]
  set_property flow "Vivado Implementation 2020" [get_runs impl_1]
}
set obj [get_runs impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_1]
set_property -name "constrset" -value "AARS_V4.0" -objects $obj
set_property -name "part" -value "xc7a100tfgg676-2" -objects $obj
set_property -name "incremental_checkpoint" -value "$proj_dir/project_1.srcs/utils_1/imports/impl_1/amiga_ffm_a7100_routed.dcp" -objects $obj
set_property -name "auto_incremental_checkpoint" -value "1" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'Agnus_impl_1' run (if not found)
if {[string equal [get_runs -quiet Agnus_impl_1] ""]} {
    create_run -name Agnus_impl_1 -part xc7a100tfgg676-2 -flow {Vivado Implementation 2020} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset Agnus -parent_run Agnus_synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs Agnus_impl_1]
  set_property flow "Vivado Implementation 2020" [get_runs Agnus_impl_1]
}
set obj [get_runs Agnus_impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'Agnus_impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Agnus_impl_1] Agnus_impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name Agnus_impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs Agnus_impl_1
}
set obj [get_report_configs -of_objects [get_runs Agnus_impl_1] Agnus_impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'Agnus_impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Agnus_impl_1] Agnus_impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name Agnus_impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs Agnus_impl_1
}
set obj [get_report_configs -of_objects [get_runs Agnus_impl_1] Agnus_impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'Agnus_impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Agnus_impl_1] Agnus_impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name Agnus_impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs Agnus_impl_1
}
set obj [get_report_configs -of_objects [get_runs Agnus_impl_1] Agnus_impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'Agnus_impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Agnus_impl_1] Agnus_impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name Agnus_impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs Agnus_impl_1
}
set obj [get_report_configs -of_objects [get_runs Agnus_impl_1] Agnus_impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'Agnus_impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Agnus_impl_1] Agnus_impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name Agnus_impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs Agnus_impl_1
}
set obj [get_report_configs -of_objects [get_runs Agnus_impl_1] Agnus_impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'Agnus_impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Agnus_impl_1] Agnus_impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name Agnus_impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs Agnus_impl_1
}
set obj [get_report_configs -of_objects [get_runs Agnus_impl_1] Agnus_impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'Agnus_impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Agnus_impl_1] Agnus_impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name Agnus_impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs Agnus_impl_1
}
set obj [get_report_configs -of_objects [get_runs Agnus_impl_1] Agnus_impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'Agnus_impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Agnus_impl_1] Agnus_impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name Agnus_impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs Agnus_impl_1
}
set obj [get_report_configs -of_objects [get_runs Agnus_impl_1] Agnus_impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'Agnus_impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Agnus_impl_1] Agnus_impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name Agnus_impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs Agnus_impl_1
}
set obj [get_report_configs -of_objects [get_runs Agnus_impl_1] Agnus_impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'Agnus_impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Agnus_impl_1] Agnus_impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name Agnus_impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs Agnus_impl_1
}
set obj [get_report_configs -of_objects [get_runs Agnus_impl_1] Agnus_impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'Agnus_impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Agnus_impl_1] Agnus_impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name Agnus_impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs Agnus_impl_1
}
set obj [get_report_configs -of_objects [get_runs Agnus_impl_1] Agnus_impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'Agnus_impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Agnus_impl_1] Agnus_impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name Agnus_impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs Agnus_impl_1
}
set obj [get_report_configs -of_objects [get_runs Agnus_impl_1] Agnus_impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'Agnus_impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Agnus_impl_1] Agnus_impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name Agnus_impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs Agnus_impl_1
}
set obj [get_report_configs -of_objects [get_runs Agnus_impl_1] Agnus_impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'Agnus_impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Agnus_impl_1] Agnus_impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name Agnus_impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs Agnus_impl_1
}
set obj [get_report_configs -of_objects [get_runs Agnus_impl_1] Agnus_impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'Agnus_impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Agnus_impl_1] Agnus_impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name Agnus_impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs Agnus_impl_1
}
set obj [get_report_configs -of_objects [get_runs Agnus_impl_1] Agnus_impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'Agnus_impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Agnus_impl_1] Agnus_impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name Agnus_impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs Agnus_impl_1
}
set obj [get_report_configs -of_objects [get_runs Agnus_impl_1] Agnus_impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'Agnus_impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Agnus_impl_1] Agnus_impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name Agnus_impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs Agnus_impl_1
}
set obj [get_report_configs -of_objects [get_runs Agnus_impl_1] Agnus_impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'Agnus_impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Agnus_impl_1] Agnus_impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name Agnus_impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs Agnus_impl_1
}
set obj [get_report_configs -of_objects [get_runs Agnus_impl_1] Agnus_impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'Agnus_impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Agnus_impl_1] Agnus_impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name Agnus_impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs Agnus_impl_1
}
set obj [get_report_configs -of_objects [get_runs Agnus_impl_1] Agnus_impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'Agnus_impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Agnus_impl_1] Agnus_impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name Agnus_impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs Agnus_impl_1
}
set obj [get_report_configs -of_objects [get_runs Agnus_impl_1] Agnus_impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'Agnus_impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Agnus_impl_1] Agnus_impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name Agnus_impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs Agnus_impl_1
}
set obj [get_report_configs -of_objects [get_runs Agnus_impl_1] Agnus_impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'Agnus_impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Agnus_impl_1] Agnus_impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name Agnus_impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs Agnus_impl_1
}
set obj [get_report_configs -of_objects [get_runs Agnus_impl_1] Agnus_impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs Agnus_impl_1]
set_property -name "constrset" -value "Agnus" -objects $obj
set_property -name "part" -value "xc7a100tfgg676-2" -objects $obj
set_property -name "include_in_archive" -value "0" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'userio_impl_1' run (if not found)
if {[string equal [get_runs -quiet userio_impl_1] ""]} {
    create_run -name userio_impl_1 -part xc7a100tfgg676-2 -flow {Vivado Implementation 2020} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset userio -parent_run userio_synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs userio_impl_1]
  set_property flow "Vivado Implementation 2020" [get_runs userio_impl_1]
}
set obj [get_runs userio_impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'userio_impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs userio_impl_1] userio_impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name userio_impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs userio_impl_1
}
set obj [get_report_configs -of_objects [get_runs userio_impl_1] userio_impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'userio_impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs userio_impl_1] userio_impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name userio_impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs userio_impl_1
}
set obj [get_report_configs -of_objects [get_runs userio_impl_1] userio_impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'userio_impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs userio_impl_1] userio_impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name userio_impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs userio_impl_1
}
set obj [get_report_configs -of_objects [get_runs userio_impl_1] userio_impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'userio_impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs userio_impl_1] userio_impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name userio_impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs userio_impl_1
}
set obj [get_report_configs -of_objects [get_runs userio_impl_1] userio_impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'userio_impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs userio_impl_1] userio_impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name userio_impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs userio_impl_1
}
set obj [get_report_configs -of_objects [get_runs userio_impl_1] userio_impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'userio_impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs userio_impl_1] userio_impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name userio_impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs userio_impl_1
}
set obj [get_report_configs -of_objects [get_runs userio_impl_1] userio_impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'userio_impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs userio_impl_1] userio_impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name userio_impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs userio_impl_1
}
set obj [get_report_configs -of_objects [get_runs userio_impl_1] userio_impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'userio_impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs userio_impl_1] userio_impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name userio_impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs userio_impl_1
}
set obj [get_report_configs -of_objects [get_runs userio_impl_1] userio_impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'userio_impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs userio_impl_1] userio_impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name userio_impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs userio_impl_1
}
set obj [get_report_configs -of_objects [get_runs userio_impl_1] userio_impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'userio_impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs userio_impl_1] userio_impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name userio_impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs userio_impl_1
}
set obj [get_report_configs -of_objects [get_runs userio_impl_1] userio_impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'userio_impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs userio_impl_1] userio_impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name userio_impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs userio_impl_1
}
set obj [get_report_configs -of_objects [get_runs userio_impl_1] userio_impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'userio_impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs userio_impl_1] userio_impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name userio_impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs userio_impl_1
}
set obj [get_report_configs -of_objects [get_runs userio_impl_1] userio_impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'userio_impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs userio_impl_1] userio_impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name userio_impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs userio_impl_1
}
set obj [get_report_configs -of_objects [get_runs userio_impl_1] userio_impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'userio_impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs userio_impl_1] userio_impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name userio_impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs userio_impl_1
}
set obj [get_report_configs -of_objects [get_runs userio_impl_1] userio_impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'userio_impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs userio_impl_1] userio_impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name userio_impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs userio_impl_1
}
set obj [get_report_configs -of_objects [get_runs userio_impl_1] userio_impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'userio_impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs userio_impl_1] userio_impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name userio_impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs userio_impl_1
}
set obj [get_report_configs -of_objects [get_runs userio_impl_1] userio_impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'userio_impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs userio_impl_1] userio_impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name userio_impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs userio_impl_1
}
set obj [get_report_configs -of_objects [get_runs userio_impl_1] userio_impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'userio_impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs userio_impl_1] userio_impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name userio_impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs userio_impl_1
}
set obj [get_report_configs -of_objects [get_runs userio_impl_1] userio_impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'userio_impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs userio_impl_1] userio_impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name userio_impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs userio_impl_1
}
set obj [get_report_configs -of_objects [get_runs userio_impl_1] userio_impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'userio_impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs userio_impl_1] userio_impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name userio_impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs userio_impl_1
}
set obj [get_report_configs -of_objects [get_runs userio_impl_1] userio_impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'userio_impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs userio_impl_1] userio_impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name userio_impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs userio_impl_1
}
set obj [get_report_configs -of_objects [get_runs userio_impl_1] userio_impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'userio_impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs userio_impl_1] userio_impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name userio_impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs userio_impl_1
}
set obj [get_report_configs -of_objects [get_runs userio_impl_1] userio_impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs userio_impl_1]
set_property -name "constrset" -value "userio" -objects $obj
set_property -name "part" -value "xc7a100tfgg676-2" -objects $obj
set_property -name "include_in_archive" -value "0" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'Denise_impl_1' run (if not found)
if {[string equal [get_runs -quiet Denise_impl_1] ""]} {
    create_run -name Denise_impl_1 -part xc7a100tfgg676-2 -flow {Vivado Implementation 2020} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset Denise -parent_run Denise_synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs Denise_impl_1]
  set_property flow "Vivado Implementation 2020" [get_runs Denise_impl_1]
}
set obj [get_runs Denise_impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'Denise_impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Denise_impl_1] Denise_impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name Denise_impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs Denise_impl_1
}
set obj [get_report_configs -of_objects [get_runs Denise_impl_1] Denise_impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'Denise_impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Denise_impl_1] Denise_impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name Denise_impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs Denise_impl_1
}
set obj [get_report_configs -of_objects [get_runs Denise_impl_1] Denise_impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'Denise_impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Denise_impl_1] Denise_impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name Denise_impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs Denise_impl_1
}
set obj [get_report_configs -of_objects [get_runs Denise_impl_1] Denise_impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'Denise_impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Denise_impl_1] Denise_impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name Denise_impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs Denise_impl_1
}
set obj [get_report_configs -of_objects [get_runs Denise_impl_1] Denise_impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'Denise_impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Denise_impl_1] Denise_impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name Denise_impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs Denise_impl_1
}
set obj [get_report_configs -of_objects [get_runs Denise_impl_1] Denise_impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'Denise_impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Denise_impl_1] Denise_impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name Denise_impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs Denise_impl_1
}
set obj [get_report_configs -of_objects [get_runs Denise_impl_1] Denise_impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'Denise_impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Denise_impl_1] Denise_impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name Denise_impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs Denise_impl_1
}
set obj [get_report_configs -of_objects [get_runs Denise_impl_1] Denise_impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'Denise_impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Denise_impl_1] Denise_impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name Denise_impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs Denise_impl_1
}
set obj [get_report_configs -of_objects [get_runs Denise_impl_1] Denise_impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'Denise_impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Denise_impl_1] Denise_impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name Denise_impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs Denise_impl_1
}
set obj [get_report_configs -of_objects [get_runs Denise_impl_1] Denise_impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'Denise_impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Denise_impl_1] Denise_impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name Denise_impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs Denise_impl_1
}
set obj [get_report_configs -of_objects [get_runs Denise_impl_1] Denise_impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'Denise_impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Denise_impl_1] Denise_impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name Denise_impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs Denise_impl_1
}
set obj [get_report_configs -of_objects [get_runs Denise_impl_1] Denise_impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'Denise_impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Denise_impl_1] Denise_impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name Denise_impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs Denise_impl_1
}
set obj [get_report_configs -of_objects [get_runs Denise_impl_1] Denise_impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'Denise_impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Denise_impl_1] Denise_impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name Denise_impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs Denise_impl_1
}
set obj [get_report_configs -of_objects [get_runs Denise_impl_1] Denise_impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'Denise_impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Denise_impl_1] Denise_impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name Denise_impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs Denise_impl_1
}
set obj [get_report_configs -of_objects [get_runs Denise_impl_1] Denise_impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'Denise_impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Denise_impl_1] Denise_impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name Denise_impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs Denise_impl_1
}
set obj [get_report_configs -of_objects [get_runs Denise_impl_1] Denise_impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'Denise_impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Denise_impl_1] Denise_impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name Denise_impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs Denise_impl_1
}
set obj [get_report_configs -of_objects [get_runs Denise_impl_1] Denise_impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'Denise_impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Denise_impl_1] Denise_impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name Denise_impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs Denise_impl_1
}
set obj [get_report_configs -of_objects [get_runs Denise_impl_1] Denise_impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'Denise_impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Denise_impl_1] Denise_impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name Denise_impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs Denise_impl_1
}
set obj [get_report_configs -of_objects [get_runs Denise_impl_1] Denise_impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'Denise_impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Denise_impl_1] Denise_impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name Denise_impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs Denise_impl_1
}
set obj [get_report_configs -of_objects [get_runs Denise_impl_1] Denise_impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'Denise_impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Denise_impl_1] Denise_impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name Denise_impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs Denise_impl_1
}
set obj [get_report_configs -of_objects [get_runs Denise_impl_1] Denise_impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'Denise_impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Denise_impl_1] Denise_impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name Denise_impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs Denise_impl_1
}
set obj [get_report_configs -of_objects [get_runs Denise_impl_1] Denise_impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'Denise_impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Denise_impl_1] Denise_impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name Denise_impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs Denise_impl_1
}
set obj [get_report_configs -of_objects [get_runs Denise_impl_1] Denise_impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs Denise_impl_1]
set_property -name "constrset" -value "Denise" -objects $obj
set_property -name "part" -value "xc7a100tfgg676-2" -objects $obj
set_property -name "include_in_archive" -value "0" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'Amber_impl_1' run (if not found)
if {[string equal [get_runs -quiet Amber_impl_1] ""]} {
    create_run -name Amber_impl_1 -part xc7a100tfgg676-2 -flow {Vivado Implementation 2020} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset Amber -parent_run Amber_synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs Amber_impl_1]
  set_property flow "Vivado Implementation 2020" [get_runs Amber_impl_1]
}
set obj [get_runs Amber_impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'Amber_impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Amber_impl_1] Amber_impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name Amber_impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs Amber_impl_1
}
set obj [get_report_configs -of_objects [get_runs Amber_impl_1] Amber_impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'Amber_impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Amber_impl_1] Amber_impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name Amber_impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs Amber_impl_1
}
set obj [get_report_configs -of_objects [get_runs Amber_impl_1] Amber_impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'Amber_impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Amber_impl_1] Amber_impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name Amber_impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs Amber_impl_1
}
set obj [get_report_configs -of_objects [get_runs Amber_impl_1] Amber_impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'Amber_impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Amber_impl_1] Amber_impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name Amber_impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs Amber_impl_1
}
set obj [get_report_configs -of_objects [get_runs Amber_impl_1] Amber_impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'Amber_impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Amber_impl_1] Amber_impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name Amber_impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs Amber_impl_1
}
set obj [get_report_configs -of_objects [get_runs Amber_impl_1] Amber_impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'Amber_impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Amber_impl_1] Amber_impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name Amber_impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs Amber_impl_1
}
set obj [get_report_configs -of_objects [get_runs Amber_impl_1] Amber_impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'Amber_impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Amber_impl_1] Amber_impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name Amber_impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs Amber_impl_1
}
set obj [get_report_configs -of_objects [get_runs Amber_impl_1] Amber_impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'Amber_impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Amber_impl_1] Amber_impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name Amber_impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs Amber_impl_1
}
set obj [get_report_configs -of_objects [get_runs Amber_impl_1] Amber_impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'Amber_impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Amber_impl_1] Amber_impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name Amber_impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs Amber_impl_1
}
set obj [get_report_configs -of_objects [get_runs Amber_impl_1] Amber_impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'Amber_impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Amber_impl_1] Amber_impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name Amber_impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs Amber_impl_1
}
set obj [get_report_configs -of_objects [get_runs Amber_impl_1] Amber_impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'Amber_impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Amber_impl_1] Amber_impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name Amber_impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs Amber_impl_1
}
set obj [get_report_configs -of_objects [get_runs Amber_impl_1] Amber_impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'Amber_impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Amber_impl_1] Amber_impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name Amber_impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs Amber_impl_1
}
set obj [get_report_configs -of_objects [get_runs Amber_impl_1] Amber_impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'Amber_impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Amber_impl_1] Amber_impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name Amber_impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs Amber_impl_1
}
set obj [get_report_configs -of_objects [get_runs Amber_impl_1] Amber_impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'Amber_impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Amber_impl_1] Amber_impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name Amber_impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs Amber_impl_1
}
set obj [get_report_configs -of_objects [get_runs Amber_impl_1] Amber_impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'Amber_impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Amber_impl_1] Amber_impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name Amber_impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs Amber_impl_1
}
set obj [get_report_configs -of_objects [get_runs Amber_impl_1] Amber_impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'Amber_impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Amber_impl_1] Amber_impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name Amber_impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs Amber_impl_1
}
set obj [get_report_configs -of_objects [get_runs Amber_impl_1] Amber_impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'Amber_impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Amber_impl_1] Amber_impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name Amber_impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs Amber_impl_1
}
set obj [get_report_configs -of_objects [get_runs Amber_impl_1] Amber_impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'Amber_impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Amber_impl_1] Amber_impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name Amber_impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs Amber_impl_1
}
set obj [get_report_configs -of_objects [get_runs Amber_impl_1] Amber_impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'Amber_impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Amber_impl_1] Amber_impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name Amber_impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs Amber_impl_1
}
set obj [get_report_configs -of_objects [get_runs Amber_impl_1] Amber_impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'Amber_impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Amber_impl_1] Amber_impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name Amber_impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs Amber_impl_1
}
set obj [get_report_configs -of_objects [get_runs Amber_impl_1] Amber_impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'Amber_impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Amber_impl_1] Amber_impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name Amber_impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs Amber_impl_1
}
set obj [get_report_configs -of_objects [get_runs Amber_impl_1] Amber_impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'Amber_impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Amber_impl_1] Amber_impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name Amber_impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs Amber_impl_1
}
set obj [get_report_configs -of_objects [get_runs Amber_impl_1] Amber_impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs Amber_impl_1]
set_property -name "constrset" -value "Amber" -objects $obj
set_property -name "part" -value "xc7a100tfgg676-2" -objects $obj
set_property -name "include_in_archive" -value "0" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'gary_impl_1' run (if not found)
if {[string equal [get_runs -quiet gary_impl_1] ""]} {
    create_run -name gary_impl_1 -part xc7a100tfgg676-2 -flow {Vivado Implementation 2020} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset gary -parent_run gary_synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs gary_impl_1]
  set_property flow "Vivado Implementation 2020" [get_runs gary_impl_1]
}
set obj [get_runs gary_impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'gary_impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs gary_impl_1] gary_impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name gary_impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs gary_impl_1
}
set obj [get_report_configs -of_objects [get_runs gary_impl_1] gary_impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'gary_impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs gary_impl_1] gary_impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name gary_impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs gary_impl_1
}
set obj [get_report_configs -of_objects [get_runs gary_impl_1] gary_impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'gary_impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs gary_impl_1] gary_impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name gary_impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs gary_impl_1
}
set obj [get_report_configs -of_objects [get_runs gary_impl_1] gary_impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'gary_impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs gary_impl_1] gary_impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name gary_impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs gary_impl_1
}
set obj [get_report_configs -of_objects [get_runs gary_impl_1] gary_impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'gary_impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs gary_impl_1] gary_impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name gary_impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs gary_impl_1
}
set obj [get_report_configs -of_objects [get_runs gary_impl_1] gary_impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'gary_impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs gary_impl_1] gary_impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name gary_impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs gary_impl_1
}
set obj [get_report_configs -of_objects [get_runs gary_impl_1] gary_impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'gary_impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs gary_impl_1] gary_impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name gary_impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs gary_impl_1
}
set obj [get_report_configs -of_objects [get_runs gary_impl_1] gary_impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'gary_impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs gary_impl_1] gary_impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name gary_impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs gary_impl_1
}
set obj [get_report_configs -of_objects [get_runs gary_impl_1] gary_impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'gary_impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs gary_impl_1] gary_impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name gary_impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs gary_impl_1
}
set obj [get_report_configs -of_objects [get_runs gary_impl_1] gary_impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'gary_impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs gary_impl_1] gary_impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name gary_impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs gary_impl_1
}
set obj [get_report_configs -of_objects [get_runs gary_impl_1] gary_impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'gary_impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs gary_impl_1] gary_impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name gary_impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs gary_impl_1
}
set obj [get_report_configs -of_objects [get_runs gary_impl_1] gary_impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'gary_impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs gary_impl_1] gary_impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name gary_impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs gary_impl_1
}
set obj [get_report_configs -of_objects [get_runs gary_impl_1] gary_impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'gary_impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs gary_impl_1] gary_impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name gary_impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs gary_impl_1
}
set obj [get_report_configs -of_objects [get_runs gary_impl_1] gary_impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'gary_impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs gary_impl_1] gary_impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name gary_impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs gary_impl_1
}
set obj [get_report_configs -of_objects [get_runs gary_impl_1] gary_impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'gary_impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs gary_impl_1] gary_impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name gary_impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs gary_impl_1
}
set obj [get_report_configs -of_objects [get_runs gary_impl_1] gary_impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'gary_impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs gary_impl_1] gary_impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name gary_impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs gary_impl_1
}
set obj [get_report_configs -of_objects [get_runs gary_impl_1] gary_impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'gary_impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs gary_impl_1] gary_impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name gary_impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs gary_impl_1
}
set obj [get_report_configs -of_objects [get_runs gary_impl_1] gary_impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'gary_impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs gary_impl_1] gary_impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name gary_impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs gary_impl_1
}
set obj [get_report_configs -of_objects [get_runs gary_impl_1] gary_impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'gary_impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs gary_impl_1] gary_impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name gary_impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs gary_impl_1
}
set obj [get_report_configs -of_objects [get_runs gary_impl_1] gary_impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'gary_impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs gary_impl_1] gary_impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name gary_impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs gary_impl_1
}
set obj [get_report_configs -of_objects [get_runs gary_impl_1] gary_impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'gary_impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs gary_impl_1] gary_impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name gary_impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs gary_impl_1
}
set obj [get_report_configs -of_objects [get_runs gary_impl_1] gary_impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'gary_impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs gary_impl_1] gary_impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name gary_impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs gary_impl_1
}
set obj [get_report_configs -of_objects [get_runs gary_impl_1] gary_impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs gary_impl_1]
set_property -name "constrset" -value "gary" -objects $obj
set_property -name "part" -value "xc7a100tfgg676-2" -objects $obj
set_property -name "include_in_archive" -value "0" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'gayle_impl_1' run (if not found)
if {[string equal [get_runs -quiet gayle_impl_1] ""]} {
    create_run -name gayle_impl_1 -part xc7a100tfgg676-2 -flow {Vivado Implementation 2020} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset gayle -parent_run gayle_synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs gayle_impl_1]
  set_property flow "Vivado Implementation 2020" [get_runs gayle_impl_1]
}
set obj [get_runs gayle_impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'gayle_impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs gayle_impl_1] gayle_impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name gayle_impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs gayle_impl_1
}
set obj [get_report_configs -of_objects [get_runs gayle_impl_1] gayle_impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'gayle_impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs gayle_impl_1] gayle_impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name gayle_impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs gayle_impl_1
}
set obj [get_report_configs -of_objects [get_runs gayle_impl_1] gayle_impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'gayle_impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs gayle_impl_1] gayle_impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name gayle_impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs gayle_impl_1
}
set obj [get_report_configs -of_objects [get_runs gayle_impl_1] gayle_impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'gayle_impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs gayle_impl_1] gayle_impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name gayle_impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs gayle_impl_1
}
set obj [get_report_configs -of_objects [get_runs gayle_impl_1] gayle_impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'gayle_impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs gayle_impl_1] gayle_impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name gayle_impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs gayle_impl_1
}
set obj [get_report_configs -of_objects [get_runs gayle_impl_1] gayle_impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'gayle_impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs gayle_impl_1] gayle_impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name gayle_impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs gayle_impl_1
}
set obj [get_report_configs -of_objects [get_runs gayle_impl_1] gayle_impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'gayle_impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs gayle_impl_1] gayle_impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name gayle_impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs gayle_impl_1
}
set obj [get_report_configs -of_objects [get_runs gayle_impl_1] gayle_impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'gayle_impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs gayle_impl_1] gayle_impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name gayle_impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs gayle_impl_1
}
set obj [get_report_configs -of_objects [get_runs gayle_impl_1] gayle_impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'gayle_impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs gayle_impl_1] gayle_impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name gayle_impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs gayle_impl_1
}
set obj [get_report_configs -of_objects [get_runs gayle_impl_1] gayle_impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'gayle_impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs gayle_impl_1] gayle_impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name gayle_impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs gayle_impl_1
}
set obj [get_report_configs -of_objects [get_runs gayle_impl_1] gayle_impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'gayle_impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs gayle_impl_1] gayle_impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name gayle_impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs gayle_impl_1
}
set obj [get_report_configs -of_objects [get_runs gayle_impl_1] gayle_impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'gayle_impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs gayle_impl_1] gayle_impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name gayle_impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs gayle_impl_1
}
set obj [get_report_configs -of_objects [get_runs gayle_impl_1] gayle_impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'gayle_impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs gayle_impl_1] gayle_impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name gayle_impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs gayle_impl_1
}
set obj [get_report_configs -of_objects [get_runs gayle_impl_1] gayle_impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'gayle_impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs gayle_impl_1] gayle_impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name gayle_impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs gayle_impl_1
}
set obj [get_report_configs -of_objects [get_runs gayle_impl_1] gayle_impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'gayle_impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs gayle_impl_1] gayle_impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name gayle_impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs gayle_impl_1
}
set obj [get_report_configs -of_objects [get_runs gayle_impl_1] gayle_impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'gayle_impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs gayle_impl_1] gayle_impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name gayle_impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs gayle_impl_1
}
set obj [get_report_configs -of_objects [get_runs gayle_impl_1] gayle_impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'gayle_impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs gayle_impl_1] gayle_impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name gayle_impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs gayle_impl_1
}
set obj [get_report_configs -of_objects [get_runs gayle_impl_1] gayle_impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'gayle_impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs gayle_impl_1] gayle_impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name gayle_impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs gayle_impl_1
}
set obj [get_report_configs -of_objects [get_runs gayle_impl_1] gayle_impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'gayle_impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs gayle_impl_1] gayle_impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name gayle_impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs gayle_impl_1
}
set obj [get_report_configs -of_objects [get_runs gayle_impl_1] gayle_impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'gayle_impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs gayle_impl_1] gayle_impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name gayle_impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs gayle_impl_1
}
set obj [get_report_configs -of_objects [get_runs gayle_impl_1] gayle_impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'gayle_impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs gayle_impl_1] gayle_impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name gayle_impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs gayle_impl_1
}
set obj [get_report_configs -of_objects [get_runs gayle_impl_1] gayle_impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'gayle_impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs gayle_impl_1] gayle_impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name gayle_impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs gayle_impl_1
}
set obj [get_report_configs -of_objects [get_runs gayle_impl_1] gayle_impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs gayle_impl_1]
set_property -name "constrset" -value "gayle" -objects $obj
set_property -name "part" -value "xc7a100tfgg676-2" -objects $obj
set_property -name "include_in_archive" -value "0" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'Paula_impl_1' run (if not found)
if {[string equal [get_runs -quiet Paula_impl_1] ""]} {
    create_run -name Paula_impl_1 -part xc7a100tfgg676-2 -flow {Vivado Implementation 2020} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset Paula -parent_run Paula_synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs Paula_impl_1]
  set_property flow "Vivado Implementation 2020" [get_runs Paula_impl_1]
}
set obj [get_runs Paula_impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'Paula_impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Paula_impl_1] Paula_impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name Paula_impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs Paula_impl_1
}
set obj [get_report_configs -of_objects [get_runs Paula_impl_1] Paula_impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'Paula_impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Paula_impl_1] Paula_impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name Paula_impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs Paula_impl_1
}
set obj [get_report_configs -of_objects [get_runs Paula_impl_1] Paula_impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'Paula_impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Paula_impl_1] Paula_impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name Paula_impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs Paula_impl_1
}
set obj [get_report_configs -of_objects [get_runs Paula_impl_1] Paula_impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'Paula_impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Paula_impl_1] Paula_impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name Paula_impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs Paula_impl_1
}
set obj [get_report_configs -of_objects [get_runs Paula_impl_1] Paula_impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'Paula_impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Paula_impl_1] Paula_impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name Paula_impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs Paula_impl_1
}
set obj [get_report_configs -of_objects [get_runs Paula_impl_1] Paula_impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'Paula_impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Paula_impl_1] Paula_impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name Paula_impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs Paula_impl_1
}
set obj [get_report_configs -of_objects [get_runs Paula_impl_1] Paula_impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'Paula_impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Paula_impl_1] Paula_impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name Paula_impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs Paula_impl_1
}
set obj [get_report_configs -of_objects [get_runs Paula_impl_1] Paula_impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'Paula_impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Paula_impl_1] Paula_impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name Paula_impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs Paula_impl_1
}
set obj [get_report_configs -of_objects [get_runs Paula_impl_1] Paula_impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'Paula_impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Paula_impl_1] Paula_impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name Paula_impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs Paula_impl_1
}
set obj [get_report_configs -of_objects [get_runs Paula_impl_1] Paula_impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'Paula_impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Paula_impl_1] Paula_impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name Paula_impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs Paula_impl_1
}
set obj [get_report_configs -of_objects [get_runs Paula_impl_1] Paula_impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'Paula_impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Paula_impl_1] Paula_impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name Paula_impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs Paula_impl_1
}
set obj [get_report_configs -of_objects [get_runs Paula_impl_1] Paula_impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'Paula_impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Paula_impl_1] Paula_impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name Paula_impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs Paula_impl_1
}
set obj [get_report_configs -of_objects [get_runs Paula_impl_1] Paula_impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'Paula_impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Paula_impl_1] Paula_impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name Paula_impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs Paula_impl_1
}
set obj [get_report_configs -of_objects [get_runs Paula_impl_1] Paula_impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'Paula_impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Paula_impl_1] Paula_impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name Paula_impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs Paula_impl_1
}
set obj [get_report_configs -of_objects [get_runs Paula_impl_1] Paula_impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'Paula_impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Paula_impl_1] Paula_impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name Paula_impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs Paula_impl_1
}
set obj [get_report_configs -of_objects [get_runs Paula_impl_1] Paula_impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'Paula_impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Paula_impl_1] Paula_impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name Paula_impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs Paula_impl_1
}
set obj [get_report_configs -of_objects [get_runs Paula_impl_1] Paula_impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'Paula_impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Paula_impl_1] Paula_impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name Paula_impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs Paula_impl_1
}
set obj [get_report_configs -of_objects [get_runs Paula_impl_1] Paula_impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'Paula_impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Paula_impl_1] Paula_impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name Paula_impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs Paula_impl_1
}
set obj [get_report_configs -of_objects [get_runs Paula_impl_1] Paula_impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'Paula_impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Paula_impl_1] Paula_impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name Paula_impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs Paula_impl_1
}
set obj [get_report_configs -of_objects [get_runs Paula_impl_1] Paula_impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'Paula_impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Paula_impl_1] Paula_impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name Paula_impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs Paula_impl_1
}
set obj [get_report_configs -of_objects [get_runs Paula_impl_1] Paula_impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'Paula_impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Paula_impl_1] Paula_impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name Paula_impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs Paula_impl_1
}
set obj [get_report_configs -of_objects [get_runs Paula_impl_1] Paula_impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'Paula_impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs Paula_impl_1] Paula_impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name Paula_impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs Paula_impl_1
}
set obj [get_report_configs -of_objects [get_runs Paula_impl_1] Paula_impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs Paula_impl_1]
set_property -name "constrset" -value "Paula" -objects $obj
set_property -name "part" -value "xc7a100tfgg676-2" -objects $obj
set_property -name "include_in_archive" -value "0" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# set the current impl run
current_run -implementation [get_runs impl_1]

puts "INFO: Project created:${_xil_proj_name_}"
# Create 'drc_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "drc_1" ] ] ""]} {
create_dashboard_gadget -name {drc_1} -type drc
}
set obj [get_dashboard_gadgets [ list "drc_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_drc_0" -objects $obj

# Create 'methodology_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "methodology_1" ] ] ""]} {
create_dashboard_gadget -name {methodology_1} -type methodology
}
set obj [get_dashboard_gadgets [ list "methodology_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_methodology_0" -objects $obj

# Create 'power_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "power_1" ] ] ""]} {
create_dashboard_gadget -name {power_1} -type power
}
set obj [get_dashboard_gadgets [ list "power_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_power_0" -objects $obj

# Create 'timing_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "timing_1" ] ] ""]} {
create_dashboard_gadget -name {timing_1} -type timing
}
set obj [get_dashboard_gadgets [ list "timing_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_timing_summary_0" -objects $obj

# Create 'utilization_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_1" ] ] ""]} {
create_dashboard_gadget -name {utilization_1} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_1" ] ]
set_property -name "reports" -value "synth_1#synth_1_synth_report_utilization_0" -objects $obj
set_property -name "run.step" -value "synth_design" -objects $obj
set_property -name "run.type" -value "synthesis" -objects $obj

# Create 'utilization_2' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_2" ] ] ""]} {
create_dashboard_gadget -name {utilization_2} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_2" ] ]
set_property -name "reports" -value "impl_1#impl_1_place_report_utilization_0" -objects $obj

move_dashboard_gadget -name {utilization_1} -row 0 -col 0
move_dashboard_gadget -name {power_1} -row 1 -col 0
move_dashboard_gadget -name {drc_1} -row 2 -col 0
move_dashboard_gadget -name {timing_1} -row 0 -col 1
move_dashboard_gadget -name {utilization_2} -row 1 -col 1
move_dashboard_gadget -name {methodology_1} -row 2 -col 1
